#!/bin/bash
export LANG="en_US.UTF-8"

if grep -qw "autotest_never_use_this_option" /proc/cmdline; then
    # Store the environment for usage by tails-autotest-remote-shell
    env >"/tmp/gdm-env"
fi

if grep -qw "debug=greeter" /proc/cmdline && [ -z "${DEBUG_GREETER:-}" ]; then
    # Export DEBUG_GREETER=1 so that when this file is executed again
    # from the gnome-terminal, we actually start the greeter and not
    # another terminal.
    export DEBUG_GREETER=1
    # In order to make the gnome-terminal - and the Greeter we start from
    # it - belong to the GDM session, we have to run it as a child process.
    # By default, gnome-terminals are spawned by systemd. This is a
    # workaround based on https://unix.stackexchange.com/a/201915.
    /usr/libexec/gnome-terminal-server --app-id greeter.debug.Terminal &
    sleep 1

    text="To start the greeter, run:

  /usr/local/lib/tails-greeter

To start the greeter with GtkInspector, run:

  GTK_DEBUG=interactive /usr/local/lib/tails-greeter

To spawn more terminals, run:

  gnome-terminal --app-id greeter.debug.Terminal -- /bin/bash
"

    gnome-terminal --app-id greeter.debug.Terminal -- /bin/bash -c "echo '${text}'; /bin/bash"
else
    cd /usr/share/tails/greeter/
    /usr/share/tails/greeter/set-cursor.py watch
    ./tails-greeter.py "$@"
fi
